<?php

require_once './model/model_api.php';
require_once './helper/helper_api.php';

class controller_api
{
    public $url;

    public function __construct()
    {
        $this->model_api = new model_api;
        $this->helper_api = new helper_api;
    }
    public function get_account()
    {   
        $jwt = $this->helper_api->CheckJWT();

        if(!$jwt['resp']){
            $message = [
                "error" => $jwt['message']
            ];
            return $this->helper_api->respond(400, $message);
        }

        $jwt_data = (array)$jwt['JWT']['data'];
        if($jwt_data['is_admin']){
            $message = [
                "success" => "berhasil mengambil data account",
                "data"    => $this->model_api->get("account")
            ];
            return $this->helper_api->respond(200, $message);
        }

        $message = [
            "success" => "berhasil mengambil data account",
            "data"    => $this->model_api->get_where("account", "id", $jwt_data['id'])
        ];
        return $this->helper_api->respond(200, $message);
    }

    public function get_notes()
    {
        $jwt = $this->helper_api->CheckJWT();

        if(!$jwt['resp']){
            $message = [
                "error" => $jwt['message']
            ];
            return $this->helper_api->respond(400, $message);
        }

        $jwt_data = (array)$jwt['JWT']['data'];
        
        if($jwt_data['is_admin'] == 2){
            $message = [
                "success" => "berhasil mengambil data notes",
                "data"    => $this->model_api->get("notes"),
                "flag"    => "ara2022{JWT_KEY_IS_STRONGNT}"
            ];
            return $this->helper_api->respond(200, $message);
        }

        if($jwt_data['is_admin']){
            $message = [
                "success" => "berhasil mengambil data notes",
                "data"    => $this->model_api->get("notes"),
                "flag"    => "ara2022{JWT_KEY_IS_STRONGNT}"
            ];
            return $this->helper_api->respond(200, $message);
        }
        
        $message = [
            "success" => "berhasil mengambil data notes",
            "data"    => $this->model_api->get_where("notes", "id_account", $jwt_data['id'])
        ];
        return $this->helper_api->respond(200, $message);
    }

    public function add_notes()
    {
        $jwt = $this->helper_api->CheckJWT();

        if(!$jwt['resp']){
            $message = [
                "error" => $jwt['message']
            ];
            return $this->helper_api->respond(400, $message);
        }

        $jwt_data = (array)$jwt['JWT']['data'];
        $data_note = [
            "id_account"  => $jwt_data['id'],
            "notes"  => $this->helper_api->getJSON("notes")
        ];

        if(!$data_note['notes']){
            $message = [
                "error" => "field notes is required"
            ];
            return $this->helper_api->respond(400, $message);
        }

        if($this->model_api->insert("notes", $data_note)){
            $message = [
                "success"   => "berhasil menambah notes"
            ];
            return $this->helper_api->respond(201, $message);
        }else{
            $message = [
                "error" => "gagal menambah notes"
            ];
            return $this->helper_api->respond(400, $message);
        }
    }

    public function login()
    {
        $username = $this->helper_api->getJSON("username");
        $password = $this->helper_api->getJSON("password");
        
        if(!$username && !$password){
            $message = [
                "error" => "field username and password is required"
            ];
            return $this->helper_api->respond(400, $message);
        }

        $data = $this->model_api->verifyLogin($username, $password);
        if(!$data){
            $message = [
                "error" => "username / password salah"
            ];
            return $this->helper_api->respond(400, $message);
        }
        $data_jwt = [
            "id"        => $data[0]['id'],
            "username"  => $data[0]['username'],
            "password"  => $data[0]['password'],
            "is_admin"  => $data[0]['role']
        ];

        if($data_jwt['is_admin'] == 2){
            $data_jwt['is_superadmin'] = 1;
        }

        $jwt = $this->helper_api->createJWT($data_jwt);
        $message = [
            "success"   => "berhasil login",
            "token"     => $jwt
        ];
        return $this->helper_api->respond(201, $message);
    }
    public function signup()
    {
        $data_akun = [
            "username"  => $this->helper_api->getJSON("username"),
            "password"  => $this->helper_api->getJSON("password")
        ];

        if(!$data_akun['username'] && !$data_akun['password']){
            $message = [
                "error" => "field username and password is required"
            ];
            return $this->helper_api->respond(400, $message);
        }

        if($this->model_api->insert("account", $data_akun)){
            $message = [
                "success"   => "berhasil signup"
            ];
            return $this->helper_api->respond(201, $message);
        }else{
            $message = [
                "error" => "signup gagal"
            ];
            return $this->helper_api->respond(400, $message);
        }
    }
}

?>